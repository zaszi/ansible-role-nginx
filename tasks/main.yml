---
- name: Install Nginx
  community.general.pacman:
    name: nginx-mainline
    state: present

- name: Generate Diffie-Hellman parameters
  ansible.builtin.command:
    cmd: openssl dhparam -out dhparams.pem 4096
    creates: /etc/nginx/dhparam.pem
  notify: "reload nginx"

- name: Ensure /etc/nginx/conf.d exists
  ansible.builtin.file:
    path: /etc/nginx/conf.d
    owner: root
    group: root
    mode: 0755
    state: directory
  notify: "reload nginx"

- name: Ensure /etc/nginx/sites-available exists
  ansible.builtin.file:
    path: /etc/nginx/sites-available
    owner: root
    group: root
    mode: 0755
    state: directory
  notify: "reload nginx"

- name: Ensure /etc/nginx/sites-enabled exists
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled
    owner: root
    group: root
    mode: 0755
    state: directory
  notify: "reload nginx"

- name: Install nginx configuration file
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: "reload nginx"

- name: Install MIME types
  ansible.builtin.copy:
    src: mime.types
    dest: /etc/nginx/mime.types
    owner: root
    group: root
    mode: 0644
  notify: "reload nginx"

- name: Install additional configs
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d/{{ item | basename }}
    owner: root
    group: root
    mode: 0644
  loop: "{{ lookup('fileglob', 'files/conf.d/*', wantlist=True) }}"

- name: Install nginx virtual hosts
  ansible.builtin.copy:
    src: "{{ vhost_location }}/{{ item }}"
    dest: /etc/nginx/sites-available/
    owner: root
    group: root
    mode: 0644
  loop: "{{ vhosts }}"

- name: Install nginx service timer
  ansible.builtin.copy:
    src: nginx.timer
    dest: /etc/systemd/system/nginx.timer
    owner: root
    group: root
    mode: 0644

- name: Enable nginx service timer
  ansible.builtin.systemd:
    name: nginx.timer
    enabled: true
    state: started
    daemon_reload: true
